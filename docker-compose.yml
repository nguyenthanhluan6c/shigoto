version: '3.3'
services:
  db:
    build:
      context: .
      dockerfile: docker/db/Dockerfile
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=database
      - MYSQL_USER=docker
      - MYSQL_PASSWORD=password
    command: mysqld
    volumes:
      - ./docker/db/volumes/data:/var/lib/mysql
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    depends_on:
      - app
    ports:
      - '3000:80'
  redis:
    image: redis:3.0.6
    volumes:
      - ./docker/redis/volumes/data:/data
  elasticsearch:
    image: elasticsearch:5.6.9
    volumes:
      - ./docker/elasticsearch/volumes/data:/data
  sidekiq:
    build:
      context: .
      dockerfile: docker/app/Dockerfile.dev
    depends_on:
      - db
      - redis
      - elasticsearch
    command: /bin/sh -c "bundle install --path vendor/bundle && bundle exec sidekiq -C config/sidekiq.yml"
    volumes:
      - .:/rails_root
    env_file:
      - ./.env
      - docker/app/.env
  cable:
    build:
      context: .
      dockerfile: docker/app/Dockerfile.dev
    depends_on:
      - 'redis'
    command: /bin/sh -c "bundle install --path vendor/bundle && bundle exec puma -p 28080 -C config/puma.rb cable/config.ru"
    ports:
      - '28080:28080'
    volumes:
      - .:/rails_root
    env_file:
      - '.env'
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile.dev
    depends_on:
      - db
      - redis
      - sidekiq
      - elasticsearch
    command: /bin/sh -c "rm -f /rails_root/tmp/pids/server.pid; bundle install --path vendor/bundle; bundle exec rails s"
    stdin_open: true
    tty: true
    volumes:
      - .:/rails_root
    environment:
      RAILS_ENV: development
    env_file:
      - ./.env
      - docker/app/.env
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile.dev
    command: /bin/sh -c "npm install && npm start"
    ports:
      - '4200:4200'
    volumes:
      - ./frontend:/frontend_root
      - ./frontend/node_modules:/frontend_root/node_modules
    env_file:
      - docker/frontend/.env

